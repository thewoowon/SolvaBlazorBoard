
@using SolvaBlazorBoard.Data
@using SolvaBlazorBoard.Services
@using SolvaBlazorBoard.Helpers
@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IAccountService accountService


<PageTitle>SolvaBlazorBoard</PageTitle>


@if(LoggedIn)
{
    <div class="page">
        <div class="sidebar">
            <NavMenu  LoggedIn="true"/>
        </div>

        <main>
            <div class="top-row px-4">
                <div class="top-row-left">
                    <h5>반갑습니다. 솔바 아고라입니다.</h5>
                </div>
                <div class="top-row-right">
                    <button class="btn btn-primary" type="button" @onclick="NavigateToLogoutComponent">Logout</button>
                </div>
            </div>

            <article class="content px-4">
                 <Alert />
                @Body
            </article>
        </main>
    </div>
}
else
{
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row px-4">
                <div class="top-row-left">
                <h5>반갑습니다. 솔바 아고라입니다.</h5>
                </div>
                <div class="top-row-right">
                    <button class="btn btn-primary" type="button" @onclick="NavigateToSignInComponent">Sign in</button>
                </div>
            </div>

            <article class="content px-4">
                 <Alert />
                @Body
            </article>
        </main>
    </div>
}




@code{
    public bool LoggedIn
    {
        get; set;
    }

     protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await accountService.Initialize();
        }
    }
    private void NavigateToSignInComponent()
    {
        navigationManager.NavigateTo("account/login");
    }
    private void NavigateToLogoutComponent()
    {
        navigationManager.NavigateTo("account/logout");
    }
}